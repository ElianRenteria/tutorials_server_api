{
  "image": "https://images.pexels.com/photos/14032252/pexels-photo-14032252.jpeg?auto=compress&cs=tinysrgb&w=600",
  "title": "Python II",
  "languages": ["Python", "Beginner"],
  "description": "Exploring Arrays, Dictionaries, and Functions in Python",
  "steps": [
    {
      "stepNumber": 1,
      "title": "Step 1: Arrays",
      "description": "Arrays are like lists where we can store multiple pieces of information. We can then access these pieces of information using their position in the list.",
      "codeSnippet": "numbers = [1, 2, 3, 4, 5]\nprint(numbers)"
    },
    {
      "stepNumber": 2,
      "title": "Step 2: Dictionaries",
      "description": "Dictionaries are like containers where we can store information using key-value pairs. We use the key to access the corresponding value.",
      "codeSnippet": "person = {'name': 'Alice', 'age': 10}\nprint(person['name'])"
    },
    {
      "stepNumber": 3,
      "title": "Step 3: Functions",
      "description": "Functions are like mini-programs within our program. They allow us to organize our code into reusable blocks and make our programs easier to understand.",
      "codeSnippet": "def greet(name):\n    print('Hello, ' + name + '!')\n\ngreet('Alice')"
    },
    {
      "stepNumber": 4,
      "title": "Step 4: Parameters and Return Values",
      "description": "Parameters allow us to pass information into a function, and return values allow the function to send data back to where it was called.",
      "codeSnippet": "def add(a, b):\n    return a + b\n\nresult = add(3, 5)\nprint(result)"
    },
    {
      "stepNumber": 5,
      "title": "Step 5: Using Functions",
      "description": "Now that we've defined our functions, let's see how we can use them in our code.",
      "codeSnippet": "def multiply(a, b):\n    return a * b\n\ntotal = multiply(4, 5)\nprint(total)"
    }
  ]
}

